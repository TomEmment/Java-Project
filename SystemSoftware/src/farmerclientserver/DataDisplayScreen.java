/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package farmerclientserver;
//import static javaserver.Server1.din;
import java.awt.BorderLayout;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Thoma
 */
public class DataDisplayScreen extends javax.swing.JFrame {
    int[][] data = new int[5][200];
    int Instance = 0;
    int Choice = 0;
    String Variable = "A";
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;

/**
 * 
     * Creates new form DataDisplayScreen
     */
    public DataDisplayScreen() {
        initComponents();
        InitialMatrix();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Stop = new java.awt.Button();
        jScrollPane2 = new javax.swing.JScrollPane();
        VariableXData = new javax.swing.JTextArea();
        StationSelection = new javax.swing.JComboBox<>();
        VariableX = new javax.swing.JComboBox<>();
        VariableY = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        VariableYData = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ChartPannel = new javax.swing.JPanel();
        UpdateData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Stop.setActionCommand("Stop");
        Stop.setLabel("Stop");
        Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopActionPerformed(evt);
            }
        });

        VariableXData.setColumns(20);
        VariableXData.setRows(5);
        jScrollPane2.setViewportView(VariableXData);

        StationSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Station 1", "Station 2", "Station 3", "Station 4" }));
        StationSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StationSelectionActionPerformed(evt);
            }
        });

        VariableX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tempreature", "Humidity", "soilPH", "WindSpeed" }));
        VariableX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VariableXActionPerformed(evt);
            }
        });

        VariableY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tempreature", "Humidity", "soilPH", "WindSpeed" }));

        VariableYData.setColumns(20);
        VariableYData.setRows(5);
        jScrollPane3.setViewportView(VariableYData);

        jLabel2.setText("Variable Y:");

        jLabel1.setText("Variable X:");

        javax.swing.GroupLayout ChartPannelLayout = new javax.swing.GroupLayout(ChartPannel);
        ChartPannel.setLayout(ChartPannelLayout);
        ChartPannelLayout.setHorizontalGroup(
            ChartPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
        ChartPannelLayout.setVerticalGroup(
            ChartPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        UpdateData.setText("Update Chart and data");
        UpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(StationSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(VariableX, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(VariableY, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(UpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                        .addComponent(ChartPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(388, 388, 388))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StationSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(VariableX, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(VariableY, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(ChartPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(UpdateData, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopActionPerformed

    }//GEN-LAST:event_StopActionPerformed

    private void StationSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StationSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StationSelectionActionPerformed

    private void VariableXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VariableXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VariableXActionPerformed

    private void UpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDataActionPerformed
       Gatherdata();//Eventually wont need this as all data will be pulled initially on succesfull login
        printTextField(VariableX.getSelectedIndex(),VariableY.getSelectedIndex() );
        LineChart_AWT(VariableX.getSelectedItem().toString(), VariableY.getSelectedItem().toString() );        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateDataActionPerformed

    private int[][]  InitialMatrix() {  //Change this to a data request from server
      
       
    int x = data[0].length - 1;
    while(x>=0){
        data[0][x] = 0;
        data[1][x] = 0;
        data[2][x] = 0;
        data[3][x] = 0;
        data[4][x] = 0;
        x=x-1;
    }
    
        System.out.println("Matrix Intitilized");
    return data; 
   }   
    

    
   private int[][]  Gatherdata() {  //Change this to a data request from server
       int SelectedX = VariableX.getSelectedIndex();  
       int SelectedY = VariableY.getSelectedIndex(); 
       int SelectedStation = StationSelection.getSelectedIndex() + 1; 
       
       // send 0 to signal that this message is related to station, not login
       String Message = "0"+Integer.toString(SelectedStation) + Integer.toString(SelectedX) + Integer.toString(SelectedY);
       

    try{
            s = new Socket("127.0.0.1",1201); //here the IP address is local address because client and server are on the same computer
        din = new DataInputStream(s.getInputStream());
        dout = new DataOutputStream(s.getOutputStream());
        dout.writeUTF(Message);
        dout.writeUTF("1"+" "+Message);
                while (!Message.equals("exit")){
                Message = din.readUTF();
                System.out.println(Message + "Data was successfully created");
        }
                s.close();
    }catch(Exception e){
       System.out.println("There was an error with the server");
       
    } 
    

 
       
       ////add Message to data
       Message = Message + ".";
       int x = Message.length()-5;
       System.out.println(x);
       int test = 3;
       char temp;

       String temp1;
       String Number = "";
       int DataInput;
       int VariableCurrent = 0;
       int Index = 0;
       int NewIndex = 0;

       while (x>0)

       {
           if (VariableCurrent == 0)
           {
               temp = Message.charAt(test);
                temp1 = String.valueOf(temp);

               if (temp1.equals(",")){
                   DataInput = Integer.parseInt(Number);
                   data[SelectedX][Index] = DataInput;
                   Number = "";
                   Index = Index+1;
               }else
               {
                   Number = Number +  temp1;
               }
               if (temp1.equals(":")){
                   VariableCurrent =1;
                   Number = "";
                   test = test +2;
                   x=x-2;
               }


                test = test+1;
                x=x-1;
           }
           
            if (VariableCurrent == 1)
           {

               temp = Message.charAt(test);
                temp1 = String.valueOf(temp);
               if ((temp1.equals(","))||(temp1.equals("."))){
                   DataInput = Integer.parseInt(Number);
                   data[SelectedY][NewIndex] = DataInput;
                   Number = "";
                   NewIndex = NewIndex+1;
               }else
               {
                   Number = Number +  temp1;
               }
                test = test+1;
                
                x=x-1;
           }
            
       
       }
 
    return data; 
   }
   
   public void LineChart_AWT(String VariableX, String VariableY ) {
       String chartTitle = VariableX + " Vs " + VariableY;
      JFreeChart lineChart = ChartFactory.createScatterPlot(
         chartTitle,
         VariableX,VariableY,
         createDataset(VariableX,VariableY));
         
        
            
           ChartPannel.setLayout(new java.awt.BorderLayout());
            
            ChartPanel CP = new ChartPanel(lineChart);
            
            ChartPannel.add(CP,BorderLayout.CENTER);
                    ChartPannel.validate();
      
      
   }

   private XYDataset createDataset(String X, String Y ) {
    XYSeriesCollection dataset = new XYSeriesCollection();

    //Boys (Age,weight) series
    XYSeries series1 = new XYSeries(X+" Vs "+Y);
    int x = 0;
    while( data[VariableX.getSelectedIndex()][x] != 0)
    {
        series1.add(data[VariableX.getSelectedIndex()][x], data[VariableY.getSelectedIndex()][x]);
        x = x +1;
    }
 

    dataset.addSeries(series1);
    


    return dataset;
   }
    
    public void printTextField(int VariableX, int VariableY) {
    int x = 0;
    int Data;
    int Data1;
    String Printable = "";
    String Printable1 = "";
   
    while(data[VariableX][x]>0){
        Data = data[VariableX][x];
        Printable = Printable + ", " + Integer.toString(Data);
        Data1 = data[VariableY][x];
        Printable1 = Printable1 + ", " + Integer.toString(Data1);            
        x = x+1;
    }
    VariableXData.setText(Printable);
    VariableYData.setText(Printable1);
    }      


    
 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataDisplayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataDisplayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataDisplayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataDisplayScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataDisplayScreen().setVisible(true);
          }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartPannel;
    private javax.swing.JComboBox<String> StationSelection;
    private java.awt.Button Stop;
    private javax.swing.JButton UpdateData;
    private javax.swing.JComboBox<String> VariableX;
    private javax.swing.JTextArea VariableXData;
    private javax.swing.JComboBox<String> VariableY;
    private javax.swing.JTextArea VariableYData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
